[
  {
    "objectID": "icerik/bilYonMod.html",
    "href": "icerik/bilYonMod.html",
    "title": "Python Modülü",
    "section": "",
    "text": "Bilgisayarlı yöntemler notlarında kullanılan fonksiyonlardan oluşan modül bu linktedir: bilYonMod.py",
    "crumbs": [
      "**İçerik**",
      "Python Modülü"
    ]
  },
  {
    "objectID": "icerik/konular/adi-diferansiyel-denklemler.html",
    "href": "icerik/konular/adi-diferansiyel-denklemler.html",
    "title": "Adi Diferansiyel Denklemler",
    "section": "",
    "text": "Not\n\n\n\n\\(y'=F(x,y)\\) denklemini, \\(y(a)=\\alpha\\) başlangıç koşuluyla çözüp \\(y(x)\\)’i istenilen aralıkta elde etmek.\n\n\nAşağıdaki gibi formda olan diferansiyel denklemlere birinci dereceden adi diferansiyel denklemler denir.\n\\[\n\\frac{dy}{dx}=y'=f(x)\n\\]\nHer iki tarafın integralini alırsak sağ tarafta bir integral sabiti olur. Bu integral sabitini belirlemek için bir adet başlangıç koşuluna veya sınır değere ihtiyaç vardır.\nEğer n. dereceden diferansiyel denklem varsa, yani \\(y^{(n)}=f(x,y,y',\\cdots,y^{(n-1)})\\), bu durumda n adet başlangıç koşuluna veya sınır değere ihtiyaç vardır.\nYüksek dereceden diferansiyel denklemler düşük dereceden diferansiyel denklemlere çevrilebilir. Örneğin,\n\\[\ny''=-y \\qquad y'(x)=v(x) \\qquad v'(x)=-y(x)\n\\]\nYukarıdaki denklemin koşulları \\(y(0)=1\\), \\(v(0)=1\\) şeklinde ise başlangıç değer problemi, \\(y(0)=1\\) ve \\(v(100)=0\\) şeklinde farklı ise sınır değer problemi olarak tanımlanır.\nDiferansiyel denklemler tek halde bulunabildiği gibi çoklu halde de bulunabilir. Örneğin,\n\\[\n\\textbf{y}'=\\textbf{F}(x,\\textbf{y})\n\\]\n\\[\n\\begin{bmatrix}\ny_1' \\\\\ny_2' \\\\\n\\vdots \\\\\ny_n'\n\\end{bmatrix}=\n\\begin{bmatrix}\nf_1(x,y_1,y_2,\\cdots,y_n) \\\\\nf_2(x,y_1,y_2,\\cdots,y_n) \\\\\n\\vdots \\\\\nf_n(x,y_1,y_2,\\cdots,y_n)\n\\end{bmatrix}\n\\]",
    "crumbs": [
      "**Konular**",
      "Adi Diferansiyel Denklemler"
    ]
  },
  {
    "objectID": "icerik/konular/adi-diferansiyel-denklemler.html#başlangıç-değer-problemleri",
    "href": "icerik/konular/adi-diferansiyel-denklemler.html#başlangıç-değer-problemleri",
    "title": "Adi Diferansiyel Denklemler",
    "section": "",
    "text": "Not\n\n\n\n\\(y'=F(x,y)\\) denklemini, \\(y(a)=\\alpha\\) başlangıç koşuluyla çözüp \\(y(x)\\)’i istenilen aralıkta elde etmek.\n\n\nAşağıdaki gibi formda olan diferansiyel denklemlere birinci dereceden adi diferansiyel denklemler denir.\n\\[\n\\frac{dy}{dx}=y'=f(x)\n\\]\nHer iki tarafın integralini alırsak sağ tarafta bir integral sabiti olur. Bu integral sabitini belirlemek için bir adet başlangıç koşuluna veya sınır değere ihtiyaç vardır.\nEğer n. dereceden diferansiyel denklem varsa, yani \\(y^{(n)}=f(x,y,y',\\cdots,y^{(n-1)})\\), bu durumda n adet başlangıç koşuluna veya sınır değere ihtiyaç vardır.\nYüksek dereceden diferansiyel denklemler düşük dereceden diferansiyel denklemlere çevrilebilir. Örneğin,\n\\[\ny''=-y \\qquad y'(x)=v(x) \\qquad v'(x)=-y(x)\n\\]\nYukarıdaki denklemin koşulları \\(y(0)=1\\), \\(v(0)=1\\) şeklinde ise başlangıç değer problemi, \\(y(0)=1\\) ve \\(v(100)=0\\) şeklinde farklı ise sınır değer problemi olarak tanımlanır.\nDiferansiyel denklemler tek halde bulunabildiği gibi çoklu halde de bulunabilir. Örneğin,\n\\[\n\\textbf{y}'=\\textbf{F}(x,\\textbf{y})\n\\]\n\\[\n\\begin{bmatrix}\ny_1' \\\\\ny_2' \\\\\n\\vdots \\\\\ny_n'\n\\end{bmatrix}=\n\\begin{bmatrix}\nf_1(x,y_1,y_2,\\cdots,y_n) \\\\\nf_2(x,y_1,y_2,\\cdots,y_n) \\\\\n\\vdots \\\\\nf_n(x,y_1,y_2,\\cdots,y_n)\n\\end{bmatrix}\n\\]",
    "crumbs": [
      "**Konular**",
      "Adi Diferansiyel Denklemler"
    ]
  },
  {
    "objectID": "icerik/konular/adi-diferansiyel-denklemler/ikinci-dereceden-diferansiyel-denklemler.html",
    "href": "icerik/konular/adi-diferansiyel-denklemler/ikinci-dereceden-diferansiyel-denklemler.html",
    "title": "İkinci Dereceden Diferansiyel Denklemler",
    "section": "",
    "text": "İkinci dereceden diferansiyel denklemleri çözmek için Euler yöntemini iki kere kullanmak gerekir. Örneğin,\n\\[\ny''+4y=0\n\\]\nİlk adımda \\(y''\\) türevi yerine \\(y'(x)=v(x)\\) tanımlaması yapalım bu durumda denklem şu şekilde olur.\n\\[\nv'=-4y\n\\]\nYukarıdaki denklem birinci dereceden bir diferansiyel denklem olduğu için Euler yöntemi ile çözülebilir. Bu denklemi çözdükten sonra \\(y(x)\\) fonksiyonunu bulmak için \\(y'(x)=v(x)\\) denklemini çözmemiz gerekir.\nDikkat edilmesi gereken husus başlangıç koşullarının \\(y(x)\\) ve \\(v(x)\\) fonksiyonları için yazmaktır. İkinci dereden bir diferansiyel denklemin çözümünü bulabilmek için hem \\(y(x_{0})\\) hem de \\(y'(x_{0})=v(x_{0})\\) koşullarına ihtiyaç vardır.\nİkinci dereceden diferansiyel denklemleri çözmek üst üste Euler çözücü fonksiyonu çağırmak yerine denklemi vektörel bir şekilde yazabiliriz. Yukarıdaki örnek için bu işlemi yapalım.\n\\[\n\\begin{bmatrix} y'(x,v) \\\\ v'(x,y) \\end{bmatrix} = \\begin{bmatrix} v(x,y) \\\\ -4y(x) \\end{bmatrix}\n\\]\nBu denklemi \\(y_{0}\\) ve \\(y_{1}\\) için yazalım.\n\\[\n\\begin{bmatrix} y_{0}'(x,y_{0},y_{1}) \\\\ y_{1}'(x,y_{0},y_{1}) \\end{bmatrix} = \\begin{bmatrix} y_{1}(x,,y_{0},y_{1}) \\\\ -4y_{0}(x) \\end{bmatrix}\n\\]\nBizim bulmak istediğimiz fonksiyon \\(y_{0}\\). Bu örneği, \\(y_{0}(0)=1\\), \\(y_{1}(0)=v(0)=1\\) başlangıç koşulları için kod yardımı ile çözelim.\n\nAlıştırma 1\nSürtünmesiz bir düzlemde serbest düşen bir parçacığın konum zaman grafiğini ve hız zaman grafiğini Newton’un ikinci yasasını kullanarak çizin. \\(g=9.81\\) m/s \\(^{2}\\) sabit düşüş ivmesi. Denklemleri Euler yöntemi ile çözün. Başlangıç koşulları \\(v(0)=0\\) ve \\(y(0)=100\\) olsun. Çözümü \\(n=100\\) s adımda yapın. Zaman aralığı \\(t=0\\) s’den \\(t=10\\) s’ye kadar olsun.\n\n\nAlıştırma 2\nBölüm 0.1 verilen denklemi ilk hızı \\(v(0)=10\\) m/s olarak değiştirerek çözün. Grafikleri karşılaştırın.””",
    "crumbs": [
      "**Konular**",
      "Adi Diferansiyel Denklemler",
      "İkinci Dereceden Diferansiyel Denklemler"
    ]
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Bilgisayarlı Yöntemler",
    "section": "",
    "text": "Bu site, çeşitli kaynaklardan derlenerek hazırlanan sayısal yöntemler veya bilgisayarlı yöntemler notlarını içerir. Bu notlar, sayısal analiz, diferansiyel denklemler, optimizasyon, istatistik ve benzeri konularda kullanılan algoritmaları ve bu algoritmaların nasıl çalıştığını anlatır.\nEğer bu notlarla ilgili herhangi bir hata veya eksiklik bulursanız, lütfen GitHub Issue sayfasına yazınız. Bu link her sayfanın sağ tarafında bulunmaktadır.\nSol taraftaki menüden konulara ulaşabilirsiniz. Ayrıca, her sayfanın altında bulunan “Next” ve “Previous” butonları ile notları sırasıyla okuyabilirsiniz.\n\n\n\n\n\n\nUyarı\n\n\n\nBuradaki notlar ve kodlar açık kaynak kodudur. Kişisel kullanım ve eğitim amaçlıdır. Ticari amaçlar için kullanılmamalıdır."
  },
  {
    "objectID": "icerik/konular/adi-diferansiyel-denklemler/euler-yontemi.html",
    "href": "icerik/konular/adi-diferansiyel-denklemler/euler-yontemi.html",
    "title": "Euler Yöntemi",
    "section": "",
    "text": "Euler yöntemi diferansiyel denklem çözümü için kullanılan en basit yöntemdir.\nAlternatif isimleri Euler-Cauchy veya nokta-eğim (point-slope) yöntemidir.\nKabaca türevin tanımını kullanır.\n\\[\ny'(x)= \\frac{y(x+h)-y(x)}{h}\n\\]\n\\[\ny(x+h)=y(x)+h\\times y'(x)\n\\]",
    "crumbs": [
      "**Konular**",
      "Adi Diferansiyel Denklemler",
      "Euler Yöntemi"
    ]
  },
  {
    "objectID": "icerik/konular/adi-diferansiyel-denklemler/denklem-sistemleri.html",
    "href": "icerik/konular/adi-diferansiyel-denklemler/denklem-sistemleri.html",
    "title": "Denklem Sistemleri",
    "section": "",
    "text": "Adi diferansiyel denklem sistemlerini çözmek için Euler yöntemini vektör haline getirip kullanabiliriz. Bunun için bilYonMod.py modülündende tanımlanan add_coz_euler_sistem(fonk_yVek_x, xBaslangic, xBitis, yBaslangic_vek, adimSayisi) fonksiyonunu kullanılmalıdır.",
    "crumbs": [
      "**Konular**",
      "Adi Diferansiyel Denklemler",
      "Denklem Sistemleri"
    ]
  },
  {
    "objectID": "icerik/konular/adi-diferansiyel-denklemler/denklem-sistemleri.html#alıştırma-1",
    "href": "icerik/konular/adi-diferansiyel-denklemler/denklem-sistemleri.html#alıştırma-1",
    "title": "Denklem Sistemleri",
    "section": "Alıştırma 1",
    "text": "Alıştırma 1",
    "crumbs": [
      "**Konular**",
      "Adi Diferansiyel Denklemler",
      "Denklem Sistemleri"
    ]
  },
  {
    "objectID": "icerik/izlence.html",
    "href": "icerik/izlence.html",
    "title": "İzlence",
    "section": "",
    "text": "Bu bölümde MSGSÜ Fizik Bölümü’nde verilen derslerin izlenceleri yer almaktadır.",
    "crumbs": [
      "**İçerik**",
      "İzlence"
    ]
  },
  {
    "objectID": "icerik/izlence.html#fiz366---fizikte-bilgisayarlı-yöntemler-ii",
    "href": "icerik/izlence.html#fiz366---fizikte-bilgisayarlı-yöntemler-ii",
    "title": "İzlence",
    "section": "FIZ366 - Fizikte Bilgisayarlı Yöntemler II",
    "text": "FIZ366 - Fizikte Bilgisayarlı Yöntemler II\n\n2023-2024 Bahar Dönemi\n\nÖğretim Üyesi: Taygun Bulmuş\nE-posta: taygun.bulmus@msgsu.edu.tr\nDers Gün ve Saatleri: Salı 09:00-12:00\nUygulama Gün ve Saatleri: Cuma 15:00-17:00 (MS Teams)\nNotlandımra: İki Vize (%20 + %20), Quizler ve Ödevler (%20), Final (%40)\n\nDers İçeriği:\n\nAdi Diferansiyel Denklemler - Başlangıç Değer Problemleri\nAdi Diferasiyel Denklemler - Sınır Değer Problemleri\nFourier Analizi\nPandas Kütüphanesi\nVeri İşleme ve Analizi\nTemel İstatistik ve Olasılık\n\n\n\n\n\n\n\nUyarı\n\n\n\nKonuların işleyiş sırası değişebilir. Dönem içerisinde konu eklenebilir verya çıkarılabilir.\n\n\nKaynaklar:\n\nBilgisayarlı Yöntemler Github Sitesi, https://bulmust.github.io/bilgisayarli-yontemler/\n\n\n\n\n\n\n\nNot\n\n\n\nKullanılacak kaynaklar, notların altına eklenecektir.",
    "crumbs": [
      "**İçerik**",
      "İzlence"
    ]
  },
  {
    "objectID": "icerik/izlence.html#fiz365---fizikte-bilgisayarlı-yöntemler-i",
    "href": "icerik/izlence.html#fiz365---fizikte-bilgisayarlı-yöntemler-i",
    "title": "İzlence",
    "section": "FIZ365 - Fizikte Bilgisayarlı Yöntemler I",
    "text": "FIZ365 - Fizikte Bilgisayarlı Yöntemler I\n\n2022-2023 Güz Dönemi\n\nÖğretim Üyesi: Taygun Bulmuş\nE-posta: taygun.bulmus@msgsu.edu.tr\nDers Gün ve Saatleri: Cuma 13:00-16:00\nUygulama Gün ve Saatleri: Cuma 16:00-18:00\nOfis Saatleri: Cuma 10:00-12:00\nNotlandımra: İki Vize (%20 + %20), Quizler (%10), Ödevler (%10), Final (%40)\n\nDers İçeriği:\n\nDersin Tanıtımı, Python ile Programlamaya Giriş\nTemel Python Programlama - I\nTemel Python Programlama - II\nNumpy-Scipy-Matplotlib\nArasınav - I\nDoğrusal Denklem Sistemleri - I\nDoğrusal Denklem Sistemleri - II\nİnterpolasyon\nEğri Uydurma\nArasınav - II\nKök Bulma\nSayısal Türev Alma\nSayısal İntegral Alma\nAdi Diferansiyel Denklemler\n\n\n\n\n\n\n\n\nUyarı\n\n\n\nKonuların işleyiş sırası değişebilir. Dönem içerisinde konu eklenebilir verya çıkarılabilir.\n\n\nKaynaklar:\n\nNumerical Methods in Engineering with Python 3, Jaan Kiusalaas, Cambridge University Press, 2013,\nIntroduction to Engineering and Scientific Computing with Python, David E. Clough, Steven C. Chapra, 1. Baskı, 2022,\nSayısal Analiz ve Mühendislik Uygulamaları, İrfan Karagöz, 5. Baskı, 2019.",
    "crumbs": [
      "**İçerik**",
      "İzlence"
    ]
  }
]