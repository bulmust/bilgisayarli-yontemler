{
  "hash": "5cf9fa58ea8d8aa7e6809fbef8a1ba71",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"Euler Yöntemi\"\nauthor: \"Taygun Bulmus\"\ntoc: true\nhighlight-style: pygments\nformat: \n  html: \n    code-fold: false\n    html-math-method: katex\n---\n\n## Euler'in Yöntemi\n\n- Euler yöntemi diferansiyel denklem çözümü için kullanılan en basit yöntemdir.\n- Alternatif isimleri Euler-Cauchy veya nokta-eğim (point-slope) yöntemidir.\n- Kabaca türevin tanımını kullanır.\n\n$$\ny'(x)= \\frac{y(x+h)-y(x)}{h}\n$$\n\n$$\ny(x+h)=y(x)+h\\times y'(x)\n$$\n\n- Amacımız başlangıç koşulundan itibaren adım adım $y(x)$ fonksiyonunu bulmaktır.\n- $x$ noktasından $x+h$ noktasına ilerlediğimiz için bu yöntem \"ileri adım\" yöntemidir.\n\n### Hata Analizi\n\nBir uygulamada Taylor serisi kullanılırsa hata analizi aşağıdaki gibi yapılır. Farz edelim ki $f(x+h)$ fonksiyonunu $f(x)$ etrafında seriye açıyoruz ve $n$'nci dereceden bir terimden sonra kesiyoruz. $E_{n}$ terimi, kestiğimiz terimden sonraki terimler yani hata terimi olsun.\n\n$$\nf(x+h)=f(x)+f'(x)h+\\frac{f''(x)}{2!}h^2+\\cdots+\\frac{f^{(n)}(x)}{n!}h^n+E_{n}\n$$\n\nHata terimi $E_{n}$'e kesme hatası (truncation error) adı verilir. Bu hatanın en büyük değeri Taylor teoreminden bulunabilir.\n\n$$\nE_{n}=f^{n+1}(\\xi)\\frac{h^{n+1}}{(n+1)!}\n$$\n\nBurada $\\xi$ $x$ ile $x+h$ arasında bir değerdir. Bu değer ulaşılabilir değilse kesme hatasını belirleyen terim $h$ adım aralığı olacaktır. Yani \n\n$$\nE_{n}=O(h^{n+1})\n$$\n\n### Euler Yöntemi ile Çözümde Hata Analizi\n\n- Euler yöntemi kullanılırken her bir adımdaki kesme hatası $O(h^2)$'dir çünkü ikinci dereceden türev terimlerini içerir. Her $h$ adımda bu hata üst üste binecektir. Yani denklem $n$ adımda çözülüyorsa kesme hatası da $n$ kere tekrarlanacaktır.\n\n$$\nE_{acc}=nE_{2}=\\frac{x_{n}-x_{0}}{h}E_{2}=O(h)\n$$\n\nEuler yöntemi ile diferansiyel denklem çözümünde kesme hata payı $h$ adım aralığı ile orantılı olacaktır.\n\n### Euler Yönteminin Geometrik Tasviri\n\n- Basitlik için çözmek istediğimiz $y$ fonksiyonu bir değişkene bağlı olsun. Bu fonksiyonun $x$ ve $x+h$ arasındaki değişimi aşağıdaki gibi olur [[1]](https://tutorial.math.lamar.edu/classes/de/eulersmethod.aspx).\n\n$$\ny(x+h)=y(x)+h\\times y'(x)\n$$\n\n### Euler Yönteminin Kodlanması\n\n::: {#8902f69f .cell execution_count=1}\n``` {.python .cell-code}\nimport numpy as np\nimport matplotlib.pyplot as plt\n\ndef add_coz_euler(fonk_x_y, xBaslangic, xBitis, yBaslangic, adimSayisi):\n    xTum= np.array([xBaslangic])\n    yTum= np.array([yBaslangic])\n    \n    h= (xBitis- xBaslangic)/ adimSayisi\n    for i in range(adimSayisi):\n        xTum= np.append(xTum, xTum[i]+ h)\n        yTum= np.append(yTum, yTum[i]+ h* fonk_x_y(xTum[i], yTum[i]))\n    return xTum, yTum\n\ndef f(x, y):\n    return x\n\nx0 = 0\ny0 = 1\nxStop = 1\nn = 10000\nxAll, yAll = add_coz_euler(f, x0, xStop, y0, n)\n\nplt.plot(xAll, yAll, 'o-', color='r', label='Euler')\nplt.plot(xAll, 1+(xAll**2)/2, 'k', label='Analitik')\nplt.xlabel('$x$')\nplt.ylabel('$y(x)$')\nplt.legend()\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](euler-yontemi_files/figure-html/cell-2-output-1.png){width=591 height=429}\n:::\n:::\n\n\n### Alıştırma 1\n\n1. Euler yöntemi ile aşağıdaki diferansiyel denklemleri çözün ve analitik çözüm ile karşılaştırın.\n\n$$\ny' + 4y = x^{2}, \\quad y(0)=1, \\quad x=[0, 0.03], \\quad n=10\n$$\n\nAnalitik çözüm: \n\n$$\ny(x)=\\frac{31}{32}e^{-4x} + \\frac{1}{4}x^{2}- \\frac{1}{8}x + \\frac{1}{32}\n$$\n\n### Alıştırma 2\n\n1. Sürtünmesiz bir düzlemde serbest düşen bir parçacığın konum zaman grafiğini ve hız zaman grafiğini Newton'un ikinci yasasını kullanarak çizin. $g=9.81$ m/s $^{2}$ sabit düşüş ivmesi. Denklemleri Euler yöntemi ile çözün. Başlangıç koşulları $v(0)=0$ ve $y(0)=100$ olsun. Çözümü $n=100$ s adımda yapın. Zaman aralığı $t=0$ s'den $t=10$ s'ye kadar olsun.\n2. Aynı denklemi ilk hızı $v(0)=10$ m/s olarak değiştirerek çözün. Grafikleri karşılaştırın.\n\n### Problemler\n\n",
    "supporting": [
      "euler-yontemi_files"
    ],
    "filters": [],
    "includes": {}
  }
}