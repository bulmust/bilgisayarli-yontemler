---
title: "Euler Yöntemi"
bibliography: euler-yontemi.bib
---

- Euler yöntemi diferansiyel denklem çözümü için kullanılan en basit yöntemdir.
- Alternatif isimleri Euler-Cauchy veya nokta-eğim (point-slope) yöntemidir.
- Kabaca türevin tanımını kullanır.

$$
y'(x)= \frac{y(x+h)-y(x)}{h}
$$

$$
y(x+h)=y(x)+h\times y'(x)
$$

- Amacımız başlangıç koşulundan itibaren adım adım $y(x)$ fonksiyonunu bulmaktır.
- $x$ noktasından $x+h$ noktasına ilerlediğimiz için bu yöntem "ileri adım" yöntemidir.

### Hata Analizi

Bir uygulamada Taylor serisi kullanılırsa hata analizi aşağıdaki gibi yapılır. Farz edelim ki $f(x+h)$ fonksiyonunu $f(x)$ etrafında seriye açıyoruz ve $n$'nci dereceden bir terimden sonra kesiyoruz. $E_{n}$ terimi, kestiğimiz terimden sonraki terimler yani hata terimi olsun.

$$
f(x+h)=f(x)+f'(x)h+\frac{f''(x)}{2!}h^2+\cdots+\frac{f^{(n)}(x)}{n!}h^n+E_{n}
$$

Hata terimi $E_{n}$'e kesme hatası (truncation error) adı verilir. Bu hatanın en büyük değeri Taylor teoreminden bulunabilir.

$$
E_{n}=f^{n+1}(\xi)\frac{h^{n+1}}{(n+1)!}
$$

Burada $\xi$ $x$ ile $x+h$ arasında bir değerdir. Bu değer ulaşılabilir değilse kesme hatasını belirleyen terim $h$ adım aralığı olacaktır. Yani 

$$
E_{n}=O(h^{n+1})
$$

### Euler Yöntemi ile Çözümde Hata Analizi

- Euler yöntemi kullanılırken her bir adımdaki kesme hatası $O(h^2)$'dir çünkü ikinci dereceden türev terimlerini içerir. Her $h$ adımda bu hata üst üste binecektir. Yani denklem $n$ adımda çözülüyorsa kesme hatası da $n$ kere tekrarlanacaktır.

$$
E_{acc}=nE_{2}=\frac{x_{n}-x_{0}}{h}E_{2}=O(h)
$$

Euler yöntemi ile diferansiyel denklem çözümünde kesme hata payı $h$ adım aralığı ile orantılı olacaktır.

### Euler Yönteminin Geometrik Tasviri

- Basitlik için çözmek istediğimiz $y$ fonksiyonu bir değişkene bağlı olsun. Bu fonksiyonun $x$ ve $x+h$ arasındaki değişimi aşağıdaki gibi olur [@BibEntry2024Feb].

$$
y(x+h)=y(x)+h\times y'(x)
$$

![Euler Yönteminin Geometrik Tasviri](https://tutorial.math.lamar.edu/classes/de/EulersMethod_Files/image001.png)

### Euler Yönteminin Kodlanması

`add_coz_euler` adlı fonksiyon [bilYonMod.py](/moduller/bilYonMod.py) modülünde tanımlıdır.

::: {.callout-note}
`add_coz_euler` fonksiyonunu inceleyiniz.
:::

::: {.callout-caution}
`add_coz_euler(fonk_y_x, xBaslangic, xBitis, yBaslangic, adimSayisi)` fonksiyonunu çağırırken denklemin sağ tarafında yer alan ve çözmeniz gereken fonksiyonda önce **y** ardından **x** tanımlanmalıdır. Yani fonksiyon $f(y,x)$ şeklinde yazılmalıdır. Burada $y$ değişkeni $y(x)$ olarak tanımlanır, $x$ ise bağımsız değişkendir.
:::

Aşağıdaki diferansiyel denklemi çözen bir örneği inceleyelim.

$$
\frac{d}{dx}y(x) = x, \quad y(0)=1, \quad x=[0, 1], \quad n=10000
$$

Çözüm aşağıdaki gibi olacaktır.

$$
y(x)=1+\frac{x^{2}}{2}
$$

```{python}
################################################
## Modül yolunu varsayılan yol olarak ekleme ve modülü içe aktarma
import os
import sys
# Bu dosyanın bulunduğu dizini al
current_dir = os.path.abspath('')
# 3 üst dizine çık
module_dir = os.path.join(os.path.abspath(os.path.join(current_dir, os.pardir, os.pardir, os.pardir)), 'moduller')
# moduller dizinini yol olarak ekle
sys.path.append(module_dir)
# bilYonMod.py modülünü içe aktar
import bilYonMod as bym
################################################
import numpy as np
import matplotlib.pyplot as plt

def fonk_y_x(y, x):
    return x

x0 = 0
y0 = 1
xStop = 1
n = 10000
xAll, yAll = bym.add_coz_euler(fonk_y_x, x0, xStop, y0, n)

plt.plot(xAll, yAll, 'o-', color='r', label='Euler')
plt.plot(xAll, 1+(xAll**2)/2, 'k', label='Analitik')
plt.xlabel('$x$')
plt.ylabel('$y(x)$')
plt.legend()
plt.show()
```

### Alıştırma 1

1. Euler yöntemi ile aşağıdaki diferansiyel denklemleri çözün ve analitik çözüm ile karşılaştırın.

$$
y' + 4y = x^{2}, \quad y(0)=1, \quad x=[0, 0.03], \quad n=10
$$

Analitik çözüm: 

$$
y(x)=\frac{31}{32}e^{-4x} + \frac{1}{4}x^{2}- \frac{1}{8}x + \frac{1}{32}
$$

---

**Çözüm:**

```{python}
################################################
## Modül yolunu varsayılan yol olarak ekleme ve modülü içe aktarma
import os
import sys
# Bu dosyanın bulunduğu dizini al
current_dir = os.path.abspath('')
# 3 üst dizine çık
module_dir = os.path.join(os.path.abspath(os.path.join(current_dir, os.pardir, os.pardir, os.pardir)), 'moduller')
# moduller dizinini yol olarak ekle
sys.path.append(module_dir)
# bilYonMod.py modülünü içe aktar
import bilYonMod as bym
################################################

import numpy as np
import matplotlib.pyplot as plt

# Fonksiyon
def fonk_y_x(y, x):
    return -4*y + x**2

x0 = 0
y0 = 1
xStop = 0.03
n = 10
xAll, yAll = bym.add_coz_euler(fonk_y_x, x0, xStop, y0, n)
# Analitik çözüm
yAnalitik=(31/32)*np.exp(-4*xAll) + (1/4)*(xAll**2) - (1/8)*xAll + (1/32)
# Çizdir
plt.plot(xAll, yAll, 'o-', color='r', label='Euler')
plt.plot(xAll, yAnalitik, 'k', label='Analitik')
plt.xlabel('$x$')
plt.ylabel('$y(x)$')
plt.legend()
plt.show()
```

### Problemler

## Referanslar

